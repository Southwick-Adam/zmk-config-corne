/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEFAULT 0
#define NUM     1
#define SYM     2
#define VIM     3
#define FUNC    4
#define GAME    5

/ {
        behaviors {
                kp_to: kp_to {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&kp>, <&to>;
                        tapping-term-ms = <200>;
                };

                mo_to: mo_to {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&mo>, <&to>;
                        tapping-term-ms = <200>;
                };

                mo_vim: mo_vim {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&mo>, <&go_vim>;
                        tapping-term-ms = <200>;
                };
        };

                
        macros {
                fname: fname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp A>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp D &kp A &kp M>
                        ;
                };

                lname: lname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp S>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        ;
                };

                email: email {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp A &kp D &kp A &kp M>
                        , <&macro_tap &kp S &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        , <&macro_tap &kp AT &kp G &kp M &kp A &kp I &kp L>
                        , <&macro_tap &kp DOT &kp C &kp O &kp M>
                        ;
                };

                addr: addr {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp N1 &kp N0 &kp N1 &kp N6 &kp SPACE>
                        , <&macro_press &kp LSHFT>
                        , <&macro_tap &kp C>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp H &kp U &kp R &kp C &kp H>
                        , <&macro_tap &kp SPACE &kp S &kp T &kp DOT>
                        ;
                };

                mouse_keys: mouse_keys {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp LALT &kp LALT &kp LALT &kp LALT &kp LALT >
                        ;
                }; 

                CIW: CIW {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp C &kp I &kp W >
                        ;
                };

                insert_0: insert_0 {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp I &to DEFAULT >
                        ;
                };

                insert_1: insert_1 {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp I &to NUM >
                        ;
                };

                go_vim: go_vim {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp ESC &to VIM >
                        ;
                };    
        };

        combos {
                compatible = "zmk,combos";
                combo_caps {
                timeout-ms = <50>;
                layers = <0>;
                key-positions = <39 40>;
                bindings = <&kp CAPS>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//           |  Q  |  W  |  F  |  P  |  G  |    |  J  |  L  |  U  |  Y  | BSP |
//           |  A  |  R  |  S  |  T  |  D  |    |  H  |  N  |  E  |  I  |  O  |
//           |  Z  |  X  |  C  |  V  |  B  |    |  K  |  M  |  .  |  ,  |  ;  |
//
//        | LSHIFT:TAB | CTRL:SPC | L0:L0 |    | L1:L1 | CMD:ENT | L4:L3 |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp Q &kp W &kp F &kp P &kp G    &kp J &kp L &kp U &kp Y &kp BSPC       &none
&none   &kp A &kp R &kp S &kp T &kp D    &kp H &kp N &kp E &kp I &kp O          &none
&none   &kp Z &kp X &kp C &kp V &kp B    &kp K &kp M &kp DOT &kp COMMA &kp SEMI &none

&mt LSHIFT TAB &mt LCTRL SPACE &mo_to DEFAULT DEFAULT   &mo_to NUM NUM  &mt LCMD RET &mo_vim FUNC
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
//       | pg_up |  1  |  2  |  3  |  '  |    |  -  |  !  |  [  |  ]  | BSP |
//       |   L2  |  4  |  5  |  6  |  0  |    |  +  |  =  |  (  |  )  |  _  |
//       | pg_dn |  7  |  8  |  9  |  .  |    |  *  |  /  |  <  |  >  |mouse_keys|
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp PG_UP &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp SQT    &kp MINUS &kp EXCL &kp LBKT &kp RBKT &kp BSPC   &none
&none   &mo SYM   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_N0  &kp PLUS &kp EQUAL &kp LPAR &kp RPAR &kp UNDER  &none
&none   &kp PG_DN &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp DOT    &kp ASTRK &kp BSLH  &kp LT &kp GT &mouse_keys   &none

                        &trans &trans &trans    &trans &trans &trans
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
//           |                          |    |  #  |  @  |  ?  |  ~  | BSP |
//           |           trans          |    |  $  |  &  |  {  |  }  |  `  |
//           |                          |    |  %  |  ^  |  \  |  |  | none|
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &trans &trans &trans &trans &trans   &kp HASH &kp AT &kp QMARK &kp TILDE &kp BSPC    &none
&none   &trans &trans &trans &trans &trans   &kp DLLR &kp AMPS &kp LBRC &kp RBRC &kp GRAVE   &none
&none   &trans &trans &trans &trans &trans   &kp PRCNT &kp CARET &kp FSLH &kp PIPE &none     &none

                        &trans &trans &trans    &trans &trans &trans
                        >;
                };

                vim_layer {
// -----------------------------------------------------------------------------------------
//      | ESC |  D  |  O  |  I  |  A   |    |   B  |   F  |  E  |   W   |  }  |
//      |  M  | CIW |  R  |  G  | CTRL |    | LEFT | DOWN |  UP | RIGHT |  {  |
//      |  U  |  `  |  ~  |  Y  |  V   |    |   ^  |   %  |  Z  |   $   |  .  |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp ESC &kp D &kp O &kp I &kp A         &kp B &kp F &kp E &kp W &kp RBRC              &none
&none   &kp M &CIW &kp R &kp G &kp LCTRL        &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LBRC   &none
&none   &kp U &kp GRAVE &kp TILDE &kp Y &kp V   &kp CARET &kp PRCNT &kp Z &kp DLLR &kp DOT    &none
                        &trans &trans &insert_0    &insert_1 &trans &trans
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
//      | ESC | fname | lname | email | addr |     | BRIGHT_DN | BRIGHT_UP | VOL_DN | VOL_UP | MUTE |
//
//                                                                                  | L5 |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp ESC &fname &lname &email &addr    &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE  &none
&none   &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans                              &none
&none   &trans &trans &trans &trans &trans    &trans &trans &trans &trans &to GAME                            &none
                      &trans &trans &trans    &trans &trans &trans
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
//           | ESC  |  Q  |  W  |  E  |  R  |    |   1  |   2  |  UP  |   3   |  4   |
//           |   .  |  A  |  S  |  D  |  F  |    |   .  | LEFT | DOWN | RIGHT |  5   |
//           |LSHIFT|  Z  |  X  |  C  |  V  |    |   I  |   J  |   M  |   T   |  6   |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp ESC &kp Q &kp W &kp E &kp R    &kp N1 &kp N2 &kp UP &kp N3 &kp N4         &none
&none   &none &kp A &kp S &kp D &kp F      &none &kp LEFT &kp DOWN &kp RIGHT &kp N5   &none
&none   &kp LSHFT &kp Z &kp X &kp C &kp V  &kp I &kp J &kp M &kp T &kp N6             &none
                &trans &trans &trans    &trans &trans &trans
                        >;
                };
        };
};