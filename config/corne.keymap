/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEFAULT 0
#define NUM     1
#define FUNC    2
#define GAME    3

/ {
        behaviors {
                mo_sk: mo_sk {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&mo>, <&sk>;
                        tapping-term-ms = <200>;
                };

                kp_to: kp_to {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&kp>, <&to>;
                        tapping-term-ms = <200>;
                };

                kp_sk: kp_sk {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&kp>, <&sk>;
                        tapping-term-ms = <200>;
                };
        };

                
        macros {
                fname: fname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp A>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp D &kp A &kp M>
                        ;
                };

                lname: lname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp S>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        ;
                };

                email: email {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp A &kp D &kp A &kp M>
                        , <&macro_tap &kp S &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        , <&macro_tap &kp AT &kp G &kp M &kp A &kp I &kp L>
                        , <&macro_tap &kp DOT &kp C &kp O &kp M>
                        ;
                };

                addr: addr {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp N1 &kp N0 &kp N1 &kp N6 &kp SPACE>
                        , <&macro_press &kp LSHFT>
                        , <&macro_tap &kp C>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp H &kp U &kp R &kp C &kp H>
                        , <&macro_tap &kp SPACE &kp S &kp T &kp DOT>
                        ;
                }; 
        };

        combos {
                compatible = "zmk,combos";
                combo_caps {
                timeout-ms = <50>;
                layers = <0>;
                key-positions = <37 42>;
                bindings = <&kp CAPS>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//           |  Q  |  W  |  F  |  P  |  G  |    |  J  |  L  |  U  |  Y  |  '  |
//           |  A  |  R  |  S  |  T  |  D  |    |  H  |  N  |  E  |  I  |  O  |
//           |  Z  |  X  |  C  |  V  |  B  |    |  K  |  M  |  .  |  ,  |  ;  |
//
//          | LSHFT:TAB | L2:SPC | L1:CMD |    | CTRL:L1 | L2:ENT | RSHFT:BSP |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp Q &kp W &kp F &kp P &kp G    &kp J &kp L &kp U &kp Y &kp SQT        &none
&none   &kp A &kp R &kp S &kp T &kp D    &kp H &kp N &kp E &kp I &kp O          &none
&none   &kp Z &kp X &kp C &kp V &kp B    &kp K &kp M &kp DOT &kp COMMA &kp SEMI &none

&mt LSHIFT TAB &lt FUNC SPACE &mo_sk NUM LCMD    &kp_to LCTRL NUM &lt FUNC RET &mt RSHIFT BSPC
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
//           |  \  |  1  |  2  |  3  |  #  |    |  +  |  -  |  !  |  [  |  ]  |
//           |  ?  |  4  |  5  |  6  |  0  |    |  =  |  &  |  |  |  (  |  )  |
//           |  `  |  7  |  8  |  9  |  .  |    |  *  |  /  |  _  |  <  |  >  |
//
//           | LSHFT:TAB | L2:SPC |  CMD  |    | CTRL:L0 | L2:ENT | RSHFT:BSP |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp BSLH &kp N1 &kp N2 &kp N3 &kp HASH   &kp PLUS &kp MINUS &kp EXCL &kp LBKT &kp RBKT   &none
&none   &kp QMARK &kp N4 &kp N5 &kp N6 &kp N0    &kp EQUAL &kp AMPS &kp PIPE &kp LPAR &kp RPAR   &none
&none   &kp GRAVE &kp N7 &kp N8 &kp N9 &kp DOT   &kp ASTRK &kp FSLH &kp UNDER &kp LT &kp GT      &none

&mt LSHIFT TAB &lt FUNC SPACE &kp_sk LCMD LCMD    &kp_to LCTRL DEFAULT &lt FUNC RET &mt RSHIFT BSPC
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
//  |   ESC   |  fname  | lname  |  email | addr  |    |   B  |  F   |  E |   W   | pg_up |
//  | new_inc | new_tab | new_win|   G    |  CTRL |    | LEFT | DOWN | UP | RIGHT |  GAME |
//  |BRIGHT_DN|BRIGHT_UP| VOL_DN | VOL_UP | MUTE  |    |   ^  |  %   |  Z |   $   | pg_dn |
//
//                         |  LSHFT  |  .  |  L0  |    |  L0  |  .  |  RSHFT  |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp ESC &fname &lname &email &addr                              &kp B &kp F &kp E &kp W &kp PG_UP           &none
&none   &kp LC(LS(N)) &kp LC(T) &kp LC(N) &kp G &kp LCTRL               &kp LEFT &kp DOWN &kp UP &kp RIGHT &to GAME &none
&none   &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE  &kp CARET &kp PRCNT &kp Z &kp DLLR &PG_DN   &none

                                        &kp LSHFT &none &to DEFAULT     &to DEFAULT &none &kp RSHFT
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
//           | ESC  |  Q  |  W  |  E  |  R  |    |   1  |   2  |  UP  |   3   |  4   |
//           |   .  |  A  |  S  |  D  |  F  |    |   .  | LEFT | DOWN | RIGHT |  5   |
//           |LSHIFT|  Z  |  X  |  C  |  V  |    |   I  |   J  |   M  |   T   |  6   |
//
//                 | LSHIFT | L2:SPC |  L0  |    |  L0  | L2:ENT | RSHIFT |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none   &kp ESC &kp Q &kp W &kp E &kp R    &kp N1 &kp N2 &kp UP &kp N3 &kp N4        &none
&none   &none &kp A &kp S &kp D &kp F      &none &kp LEFT &kp DOWN &kp RIGHT &kp N5   &none
&none   &kp LSHFT &kp Z &kp X &kp C &kp V  &kp I &kp J &kp M &kp T &kp N6            &none

&kp LSHIFT &lt FUNC SPACE &mo DEFAULT     &to DEFAULT &lt FUNC RET &kp RSHIFT
                        >;
                };
        };
};