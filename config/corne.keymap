/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEFAULT 0
#define NUM     1
#define FUNC    2
#define GAME    3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//              |Q:Cap|  W  |  F  |  P  |  G  |    |  J  |  L  |  U  |  Y  | ,/? |
//              |  A  |  R  |  S  |  T  |  D  |    |  H  |  N  |  E  |  I  |  O  |
//              |  Z  |  X  |  C  |  V  |  B  |    |  K  |  M  | ./! |  ;  |  '  |
//
//                 | TAB:LSHFT | SPC | CMD:L1 |    | L1:CTRL | ENT:L2 | BSP:RSHIFT |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none     &mt CAPS Q &kp W &kp F &kp P &kp G /**/ &kp J &kp L &kp U &kp Y &kp COMMA           &none
&none          &kp A &kp R &kp S &kp T &kp D /**/ &kp H &kp N &kp E &kp I &kp O               &none
&none          &kp Z &kp X &kp C &kp V &kp B /**/ &kp K &kp M &kp DOT &kp SEMI &kp SQT        &none
           &mt LSHIFT TAB &kp SPACE &sk LCMD /**/ &kp RET &to 1 &mt RSHIFT BSPC
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
//              |  `  |  7  |  8  |  9  |  #  |    |    =   |   +  |  -   |   *   |  /  |
//              |  &  |  4  |  5  |  6  |  0  |    |  LEFT  |  UP  | DOWN | RIGHT |  %  |
//              |  @  |  1  |  2  |  3  |  .  |    |  (/<   |  )/> |  [   |   ]   |  \  |
//
//                 | TAB:LSHFT | SPC | CMD:L2 |    | L0:CTRL | ENT | BSP:RSHIFT |
// -----------------------------------------------------------------------------------------
                        bindings = <
&none     &mt CAPS Q &kp W &kp F &kp P &kp G /**/ &kp J &kp L &kp U &kp Y &kp COMMA           &none
&none          &kp A &kp R &kp S &kp T &kp D /**/ &kp H &kp N &kp E &kp I &kp O               &none
&none          &kp Z &kp X &kp C &kp V &kp B /**/ &kp K &kp M &kp DOT &kp SEMI &kp SQT        &none
           &mt LSHIFT TAB &kp SPACE &sk LCMD /**/ &kp RET &to 1 &mt RSHIFT BSPC
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
//      | ESC |  .  |  .  |     .     |     .     |    |new_wind| new_tab|  .   |  .  | pg_up |
//      |  .  |emoji|  .  | BRIGHT_DN | BRIGHT_UP |    | VOL_DN | VOL_UP | MUTE |  .  | pg_dn |
//      |fname|lname|email|     .     |    ALT    |    |   DEL  |    .   |  .   |  .  |  end  |
//
//                              |  .  |  .  |  .  |    | trans |  .  |  game  |
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
//              | ESC |  Q  |  W  |  E  |  R  |    |  1  |   2  |  UP  |   3   |  4   |
//              |  .  |  A  |  S  |  D  |  F  |    |  .  | LEFT | DOWN | RIGHT | MUTE |
//              |  Z  |  X  |  C  |  V  |  B  |    |  I  |   J  |   M  |   T   | CTRL |
//
//                      | LSHIFT | SPC |  L1  |    |  L2  | SPC | RSHIFT |
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
